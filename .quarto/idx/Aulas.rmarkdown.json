{"title":"Aulas","markdown":{"yaml":{"title":"Aulas","format":"html"},"headingText":"Aula 1 – Apresentação e comandos R","headingAttr":{"id":"aula-1","classes":[],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n\n\n\n\n\n\n\n\nOs tópicos abordados nessa aula foram:\n\n-   Operações básicas no R;\n-   Trabalhando com datasets;\n-   Transformações matemáticas;\n-   Uso de pacotes R.\n\n\n\n\n\n\n\n\n```{r}\n#carregando conjunto de dados interno do programa R.\ndados <- Orange\ndados = Orange\n\n#visualizando o conjunto de dados\nOrange\n\n### Transformações Matemáticas\n# Criar vetor com valores de circunferência\ncirc <- dados$circumference  # Extrai coluna como vetor\n\n# Aplicar exponencial e logaritmo\ncirc2 <- exp(circ)           # Exponencial\ncirc3 <- log(circ2)          # Log do resultado anterior (volta ao original)\n\n# Adicionar nova coluna ao dataframe\ndados$logcirc <- log(dados$circumference)\n\n# Visualizar dataframe modificado\nhead(dados)\n\n### Instalando pacotes no R. \n\n\n# Instalar pacotes (executar apenas uma vez)\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\n\ninstall.packages(\"tidyverse\")\ninstall.packages(\"agricolae\")\n\n# Carregar pacotes\n\nlibrary(tidyverse)\nlibrary(agricolae)\n\n### Exemplo com Gráfico Básico\n\n# Criar dados de exemplo\ndates <- c(7,14,21,28,35,42)\nseverity <- c(0.1,5,10,35,50,60)\ndata_curva <- data.frame(dates, severity)\n\n# Gráfico de colunas e linha\ndata_curva |>\n  mutate(severity2 = c(1,10,35,58,70,82)) |> \n  ggplot(aes(dates, severity2)) +\n  geom_col(fill = \"black\") +\n  geom_line(linewidth = 2, color = \"purple\") +\n  geom_point(size = 5, color = \"black\") +\n  labs(\n    title = \"Progresso da doença ao longo dos dias\",\n    x = \"Dias após plantio\",\n    y = \"Severidade (%)\"\n  ) +\n  theme_classic()\n\n## Dicas Rápidas\n\n#1. **Atalhos úteis**:\n  # - `Ctrl + Enter`: Executa linha selecionada\n  # - `Alt + -`: Insere `<-` automaticamente\n\n#2. **Boas práticas**:\n  # - Use nomes descritivos para objetos (`dados_plantas` em vez de `df1`)\n  # - Comente seu código com `#` para explicar etapas importantes\n\n#3. **Para saber mais**:\n  # - [Documentação do R](https://www.r-project.org/)\n  # - [Cheatsheet do tidyverse](https://www.tidyverse.org/learn/)\n```\n\n\n\n\n\n\n\n\n## Aula 2 – Importando dados externos {#aula-2}\n\nOs tópicos desta aula foram:\n\n-   Importação de dados de Excel e Google Sheets;\n-   Manipulação com `dplyr` (filtros, contagens, seleção);\n-   Visualização com `ggplot2` (gráficos customizados);\n-   Combinação de gráficos com `patchwork` ;\n\n\n\n\n\n\n\n\n```{r}\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\n\n# Carregando os pacotes necessários para essa aula\nlibrary(tidyverse)    # Carrega o conjunto de pacotes do tidyverse\nlibrary(readxl)       # Para leitura de arquivos Excel (.xls/.xlsx)\nlibrary(writexl)      # Para exportar dados em formato .xlsx\nlibrary(gsheet)       # Para importar planilhas do Google Sheets\nlibrary(janitor)      # Para tabelas limpas e funções como 'tabyl'\nlibrary(ggthemes)     # Temas visuais para gráficos com ggplot2\nlibrary(patchwork)    # Para combinar múltiplos gráficos ggplot\n\n#---------------------------------------\n# 1. Importação de dados locais\n#---------------------------------------\n\n# Lê a 2ª planilha do arquivo Excel (essa contém 'dose')\ndados2 <- read_excel(\"dados-diversos.xlsx\", sheet = 2)\nprint(colnames(dados2))   # Verificar colunas da planilha 2, confirmar que 'dose' existe\nglimpse(dados2)\n\n#---------------------------------------\n# 2. Importação de dados adicionais\n#---------------------------------------\n\n# Lê um arquivo .csv\ncurve <- read.csv(\"curva.csv\")\n\n# Exporta os dados em dois formatos\nwrite_xlsx(curve, \"curva2.xlsx\")\nwrite.csv(curve, \"curve2.csv\", row.names = FALSE)\n\n#---------------------------------------\n# 3. Importação de dados da nuvem (Google Sheets)\n#---------------------------------------\n\n# Importa planilhas públicas do Google Sheets\ndados_nuvem <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=373270992\")\ndados_mg     <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=983033137\")\nsurvey       <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1118819738\")\n\n#---------------------------------------\n# 4. Exploração inicial dos dados 'survey'\n#---------------------------------------\n\n# Contagem por grupos\nsurvey |> group_by(state)   |> count()\nsurvey |> group_by(species) |> count()\nsurvey |> group_by(residue) |> count()\nsurvey |> group_by(state, residue) |> count()\n\n# Filtro por estados específicos\nRS <- survey |> filter(state == \"RS\")\nPR <- survey |> filter(state == \"PR\")\n\n# Combina os dados dos dois estados\ncombinado <- rbind(RS, PR)\n\n#---------------------------------------\n# 5. Seleção e filtragem de colunas\n#---------------------------------------\n\n# Seleciona apenas algumas colunas\nsurvey_b <- survey |> select(year, state, species)\n\n# Alternativa explícita com dplyr:: (equivalente)\nsurvey_b <- survey |> dplyr::select(year, state, species)\n\n# Filtra dados apenas do ano de 2009\nsurvey_2009 <- survey |>\n  select(year, state, species) |>\n  filter(year == 2009)\n\n#---------------------------------------\n# 6. Tabelas de contingência\n#---------------------------------------\n\n# Frequência cruzada entre ano e espécie\nsurvey_b |> tabyl(year, species)\n\n#---------------------------------------\n# 7. Visualizações com ggplot2\n#---------------------------------------\n\n# Gráfico de colunas por espécie e ano\nsurvey_b |>\n  group_by(year, species) |> count() |>\n  ggplot(aes(year, n)) +\n  geom_col() +\n  facet_wrap(~species)\n\n# Gráfico colorido manualmente\nsurvey_b |>\n  group_by(year, species) |> count() |>\n  ggplot(aes(year, n, fill = species)) +\n  geom_col() +\n  scale_fill_manual(values = c(\"red\", \"blue\"))\n\n# Gráfico em escala de cinza\nsurvey_b |>\n  group_by(year, species) |> count() |>\n  ggplot(aes(year, n, fill = species)) +\n  geom_col() +\n  scale_fill_grey()\n\n# Gráfico com paleta viridis (mais acessível)\nsurvey_b |>\n  group_by(year, species) |> count() |>\n  ggplot(aes(year, n, fill = species, color = species)) +\n  geom_col() +\n  scale_fill_viridis_d()\n\n#---------------------------------------\n# 8. Visualizações do conjunto 'mg'\n#---------------------------------------\n\n# Importa os dados novamente (já feito antes, poderia ser omitido)\nmg <- dados_mg\n\n# Gráfico de dispersão simples\nmg |>\n  ggplot(aes(trat, comp)) +\n  geom_point()\n\n# Gráfico com jitter para melhor visualização\nmg |>\n  ggplot(aes(trat, comp)) +\n  geom_jitter(width = 0.1) +\n  scale_y_continuous(limits = c(0, 20))\n\n# Boxplot com jitter sobreposto\nmg |>\n  ggplot(aes(trat, comp)) +\n  geom_boxplot() +\n  geom_jitter(width = 0.1, color = \"gray50\") +\n  scale_y_continuous(limits = c(0, 20)) +\n  labs(x = \"Tratamento\", y = \"Comprimento (mm)\") +\n  theme_classic()\n\n# Gráfico final formatado\nplot_mg <- mg |>\n  ggplot(aes(trat, comp)) +\n  geom_boxplot(fill = \"#056646\", outlier.colour = NA) +\n  geom_jitter(width = 0.1, color = \"gray50\") +\n  scale_y_continuous(limits = c(0, 20)) +\n  labs(\n    x = \"Tratamento\", y = \"Comprimento (mm)\",\n    title = \"Efeito do magnésio\",\n    subtitle = \"Tamanho da lesão da mancha\",\n    caption = \"Betim, V. R. P. B\"\n  ) +\n  theme_classic(base_size = 14)\n\n# Salva o gráfico em PNG\nggsave(\"box.png\", plot = plot_mg, bg = \"white\", width = 5, height = 4)\n\n#---------------------------------------\n# 9. Gráfico micelial\n#---------------------------------------\n\nmicelial <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=959387827\")\n\nplot_micelial <- micelial |> \n  ggplot(aes(x = reorder(especie, tcm), y = tcm)) +\n  geom_boxplot(fill = \"white\", outlier.colour = NA) +\n  geom_jitter(width = 0.1) +\n  coord_flip() +\n  labs(\n    x = \"Espécie\", y = \"TCM (mm)\",\n    title = \"Taxa de crescimento micelial\",\n    caption = \"Fonte: V. Betim (2021)\"\n  ) +\n  theme_clean()\n\n#---------------------------------------\n# 10. Combinação de gráficos com patchwork\n#---------------------------------------\n\n# Combina os dois gráficos lado a lado\ncombo_plot <- (plot_mg + plot_micelial) + \n  plot_annotation(tag_levels = \"A\")\n\n# Salva o gráfico combinado\nggsave(\"combo1.png\", combo_plot, bg = \"white\", width = 8, height = 4)\n\n```\n\n\n\n\n\n\n\n\n## Aula 3 – Estatística {#aula-3}\n\nEste script R apresenta uma análise estatística completa, organizada em quatro tópicos principais:\n\n-   Importação e Visualização de Dados;\n\n-   Testes Estatísticos para Comparação de Grupos;\n\n-   Análise de Variância (ANOVA) e Comparações Múltiplas;\n\n-   Modelagem Estatística Avançada e Diagnóstico;\n\n\n\n\n\n\n\n\n```{r}\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\n\n# ---------- Pacotes essenciais ----------\nlibrary(gsheet)     # Importar dados direto do Google Sheets\nlibrary(ggplot2)    # Gráficos\nlibrary(dplyr)      # Manipulação de dados\nlibrary(tidyr)      # Manipulação de dados (pivot_wider etc)\nlibrary(rstatix)    # Testes estatísticos fáceis\nlibrary(ggpubr)     # Gráficos com testes estatísticos\nlibrary(report)     # Reporte automático dos testes\nlibrary(car)        # Testes para ANOVA e homogeneidade\nlibrary(emmeans)    # Médias ajustadas e comparações múltiplas\nlibrary(multcomp)   # Comparações múltiplas\nlibrary(multcompView) # Letras agrupadoras (post-hoc)\nlibrary(agricolae)  # Teste de Kruskal-Wallis com agrupamento\nlibrary(DHARMa)     # Diagnóstico de modelos GLM\nlibrary(performance) # Avaliação de modelos\n\n# Instale os pacotes que não tiver ainda:\n# install.packages(c(\"gsheet\",\"ggplot2\",\"dplyr\",\"tidyr\",\"rstatix\",\"ggpubr\",\"report\",\"car\",\"emmeans\",\"multcomp\",\"multcompView\",\"agricolae\",\"DHARMa\",\"performance\"))\n\n\n# ---------- Importar dados e visualização inicial ----------\n\n# Dados magnésio - teste t e gráfico\ndat_mg <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=983033137#gid=983033137\")\n\n# Visualizar dados com jitter plot para ver distribuição por tratamento\nggplot(dat_mg, aes(x = trat, y = comp)) +\n  geom_jitter(width = 0.1) +\n  labs(title = \"Distribuição da variável comp por tratamento\",\n       x = \"Tratamento\",\n       y = \"Comprimento\")\n\n# Visualizar estrutura e nomes (se precisar)\nglimpse(dat_mg)\nnames(dat_mg)\n\n\n# ---------- Teste t para dados independentes ----------\n\n# Teste t clássico para comparação entre control e Mg2\n# Primeiro, precisamos dos dados no formato wide (pivot_wider)\ndat_mg_wide <- dat_mg %>%\n  tidyr::pivot_wider(names_from = trat, values_from = comp) %>%\n  dplyr::select(-dplyr::any_of(\"rep\")) # Remove coluna de repetição se existir\n\n# Teste t (independente, variâncias não assumidas iguais)\nt_result <- t.test(dat_mg_wide$control, dat_mg_wide$Mg2, var.equal = FALSE)\nprint(t_result)\nreport(t_result)  # Relatório bonito do teste\n\n# Alternativa para teste t usando fórmula (do pacote rstatix)\nt_test_formula <- t.test(comp ~ trat, data = dat_mg, var.equal = FALSE)\nprint(t_test_formula)\n\n\n# ---------- Boxplot com valor p no gráfico ----------\n\n# Criar data frame para colocar p-valor no gráfico\np_values <- data.frame(\n  group1 = \"control\",\n  group2 = \"Mg2\",\n  p.value = t_result$p.value,\n  y.position = max(dat_mg$comp) * 0.9\n)\n\n# Boxplot com p-valor anotado\np <- ggboxplot(dat_mg,\n               x = \"trat\",\n               y = \"comp\",\n               color = \"trat\",\n               palette = \"jco\") +\n  stat_pvalue_manual(p_values, label = \"p.value\") +\n  ylim(0, max(dat_mg$comp) * 1.1) +\n  labs(title = \"Boxplot de comprimento por tratamento com p-valor\",\n       x = \"Tratamento\",\n       y = \"Comprimento\")\nprint(p)\n\n\n# ---------- Testes de normalidade e variância ----------\n\n# Teste Shapiro-Wilk para normalidade por grupo\nshapiro_control <- shapiro.test(dat_mg_wide$control)\nshapiro_Mg2 <- shapiro.test(dat_mg_wide$Mg2)\nprint(shapiro_control)\nprint(shapiro_Mg2)\n\n# Histogramas para visualizar a distribuição\nhist(dat_mg_wide$control, main = \"Histograma Controle\", xlab = \"Comprimento\")\nhist(dat_mg_wide$Mg2, main = \"Histograma Mg2\", xlab = \"Comprimento\")\n\n# Teste F para homogeneidade de variâncias\nvar_homogeneity <- var.test(dat_mg_wide$control, dat_mg_wide$Mg2)\nprint(var_homogeneity)\n\n\n# ---------- Teste t pareado para dados dependentes ----------\n\n# Importa outro conjunto para exemplo t pareado\nescala <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1729131173#gid=1729131173\")\n\n# Transformar em formato wide para t test pareado\nescala_wide <- escala %>%\n  pivot_wider(id_cols = rater, names_from = assessment, values_from = acuracia)\n\n# Teste t pareado\nt_pareado <- t.test(escala_wide$Unaided, escala_wide$Aided1, paired = TRUE)\nprint(t_pareado)\n\n# Boxplot para visualização\nggplot(escala, aes(x = assessment, y = acuracia)) +\n  geom_boxplot() +\n  labs(title = \"Comparação da Acurácia por Assessment\",\n       x = \"Assessment\",\n       y = \"Acurácia\")\n\n\n# ---------- Testes de variância, normalidade e não-paramétricos para grupos ----------\n\n# Filtrar para grupos (separar vetor)\nunaided <- escala %>% filter(assessment == \"Unaided\") %>% pull(acuracia)\naided <- escala %>% filter(assessment == \"Aided1\") %>% pull(acuracia)\n\n# Teste de variância\nprint(var.test(unaided, aided))\n\n# Histogramas\nhist(unaided, main = \"Histograma Unaided\", xlab = \"Acurácia\")\nhist(aided, main = \"Histograma Aided1\", xlab = \"Acurácia\")\n\n# Shapiro para normalidade\nprint(shapiro.test(unaided))\nprint(shapiro.test(aided))\n\n# Teste t não pareado (Welch)\nprint(t.test(unaided, aided, paired = FALSE, var.equal = FALSE))\n\n# Teste de Wilcoxon não pareado (não paramétrico)\nprint(wilcox.test(unaided, aided, paired = FALSE))\n\n\n# ---------- Análise de Variância (ANOVA) para micélio ----------\n\nmicelial <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=959387827#gid=959387827\")\n\n# Boxplot para micélio\nggplot(micelial, aes(x = especie, y = tcm)) +\n  geom_boxplot(outlier.color = NA) +\n  geom_jitter(width = 0.1) +\n  labs(title = \"Taxa de Crescimento Micelial\", x = \"Espécie\", y = \"TCM (mm)\")\n\n# ANOVA e teste dos resíduos\nanova_model <- aov(tcm ~ especie, data = micelial)\nsummary(anova_model)\n\n# Histogramas dos resíduos e teste Shapiro-Wilk\nhist(residuals(anova_model), main = \"Resíduos ANOVA\")\nprint(shapiro.test(residuals(anova_model)))\n\n# Testes de homogeneidade (Bartlett e Levene)\nprint(bartlett.test(tcm ~ especie, data = micelial))\nprint(leveneTest(tcm ~ especie, data = micelial))\n\n# Comparações múltiplas com emmeans\nemm <- emmeans(anova_model, ~ especie)\nprint(emm)\n\n# Letras agrupadoras\nprint(cld(emm))\n\n# Comparação par a par\nprint(pairs(emm))\n\n\n# ---------- Análise de inseticidas (InsectSprays) ----------\n\ndata(\"InsectSprays\")\n\n# Visualizar dados\nggplot(InsectSprays, aes(x = spray, y = count)) +\n  geom_boxplot(outlier.color = NA) +\n  geom_jitter(width = 0.1) +\n  labs(title = \"Contagem por Tipo de Spray\", x = \"Spray\", y = \"Count\")\n\n# Teste de homogeneidade (Bartlett)\nprint(bartlett.test(count ~ spray, data = InsectSprays))\n\n# Modelo linear\nlm_model <- lm(count ~ spray, data = InsectSprays)\n\n# Verificar resíduos\nhist(residuals(lm_model), main = \"Resíduos do Modelo Linear\")\nprint(shapiro.test(residuals(lm_model)))\nqqnorm(residuals(lm_model))\nqqline(residuals(lm_model))\n\n# Alternativa: transformar variável resposta com rank\n\n# Corrigido: criar nova variável com rank(count + 0.1)\nInsectSprays <- InsectSprays %>%\n  mutate(rank_count = rank(count + 0.1))\n\n# Modelo com variável transformada\nlm_rank <- lm(rank_count ~ spray, data = InsectSprays)\n\nhist(residuals(lm_rank), main = \"Resíduos após transformação\")\nprint(shapiro.test(residuals(lm_rank)))\nqqnorm(residuals(lm_rank))\nqqline(residuals(lm_rank))\n\n# Análise do modelo transformado\nanova(lm_rank)\nreport(lm_rank)\n\n# Médias ajustadas para modelo transformado\nemm_rank <- emmeans(lm_rank, ~ spray, type = \"response\")\nprint(emm_rank)\nprint(cld(emm_rank))\n\n# Plotagem médias ajustadas\nplot(emm_rank)\n\n# Teste não paramétrico Kruskal-Wallis\nprint(kruskal.test(count ~ spray, data = InsectSprays))\n\n# Teste com pacote agricolae para agrupamento\nkruskal_out <- with(InsectSprays, kruskal(count, spray, group = TRUE, console = TRUE))\nprint(kruskal_out)\n\n# Diagnóstico modelo GLM Poisson (alternativa paramétrica)\nglm_poisson <- glm(count ~ spray, data = InsectSprays, family = poisson)\nanova(glm_poisson)\nAnova(glm_poisson)\nplot(simulateResiduals(glm_poisson))\nperformance(glm_poisson)\n\n```\n\n\n\n\n\n\n\n\n## Aula 4 – Análises Estatísticas e Modelos {#aula-4}\n\nEste código aborda análises estatísticas avançadas para dados experimentais, com foco em:\n\n-   Diagnóstico de Modelos Usando o Pacote DHARMa\n-   Modelagem Estatística Paramétrica e Comparação de Médias\n-   Análise Fatorial e Interações\n-   Análise de Dados de Experimentos com Repetições e Agrupamentos\n\n\n\n\n\n\n\n\n```{r}\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\n\n# ----------------------------\n# Pacotes necessários\n# ----------------------------\nlibrary(DHARMa)       # Simulação de resíduos para modelos\nlibrary(multcomp)     # Comparações múltiplas\nlibrary(car)          # Análises ANOVA e diagnóstico\nlibrary(emmeans)      # Estimativa de médias marginais\nlibrary(gsheet)       # Importar planilhas Google Sheets\nlibrary(ggplot2)      # Visualização gráfica\nlibrary(dplyr)        # Manipulação de dados\nlibrary(agricolae)    # Testes não paramétricos e comparações\nlibrary(patchwork)    # Compor múltiplos plots\nlibrary(epifitter)    # Dados e funções epidemiológicas\nlibrary(rstatix)      # Funções de testes estatísticos\n\n# ----------------------------\n# Modelo Linear para Insetos com Transformação\n# ----------------------------\ninsetos <- InsectSprays \n\n# Ajuste do modelo linear com transformação sqrt para normalizar resíduos\nm2 <- lm(sqrt(count) ~ spray, data = insetos)\n\n# Visualização dos resíduos simulados com DHARMa\nplot(simulateResiduals(m2))\n\n# Verificação das premissas do modelo linear\ncheck_model(m2)\n\n# ----------------------------\n# Modelo GLM para Insetos (Poisson)\n# ----------------------------\nm4 <- glm(count ~ spray, data = insetos, family = poisson)\n\n# Análise de variância para o GLM\nanova(m4)\nAnova(m4) # Anova pelo pacote car\n\n# Visualização dos resíduos simulados do GLM\nplot(simulateResiduals(m4))\n\n# Estimativa das médias marginais e comparações múltiplas\nmedias_m4 <- emmeans(m4, ~ spray, type = \"response\")\ncld(medias_m4)\n\n# ----------------------------\n# Análise Fatorial: Fungicida e Dose\n# ----------------------------\nfungicida_vaso <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=2023059672#gid=2023059672\")\n\n# Visualizar severidade por dose e tratamento\nfungicida_vaso |>\n  ggplot(aes(dose, severity * 100)) +\n  geom_jitter(width = 0.1) +\n  facet_wrap(~treat)\n\n# Modelo linear com interação entre tratamento e dose\nm_anti <- lm(severity ~ treat * dose, data = fungicida_vaso)\n\n# Análise de variância do modelo\nanova(m_anti)\n\n# Simulação dos resíduos com DHARMa\nplot(simulateResiduals(m_anti))\n\n# Estimativas marginais condicionais e agrupamento\nmedia_anti_treat <- emmeans(m_anti, ~ treat | dose)\ncld(media_anti_treat)\n\nmedia_anti_dose <- emmeans(m_anti, ~ dose | treat)\ncld(media_anti_dose)\n\n# Coeficiente de variação\ncv.model(m_anti)\n\n# Gráfico de interação dose x tratamento\ninteraction.plot(fungicida_vaso$treat, fungicida_vaso$dose, fungicida_vaso$severity, data = fungicida_vaso)\n\n# Gráficos separados para dose e tratamento\np1 <- fungicida_vaso |>\n  ggplot(aes(dose, severity * 100)) +\n  geom_jitter(width = 0.1)\n\np2 <- fungicida_vaso |>\n  ggplot(aes(treat, severity * 100)) +\n  geom_jitter(width = 0.1)\n\n# Mostrar os dois gráficos lado a lado\np1 + p2\n\n# ----------------------------\n# Análise de Oídio - Severidade e AUDPC\n# ----------------------------\noidio <- PowderyMildew\n\n# Visualizar severidade por tempo e tipo de irrigação\noidio |>\n  ggplot(aes(time, sev * 100)) +\n  geom_jitter(width = 0.1) +\n  facet_wrap(~irrigation_type)\n\n# Visualização por duas variáveis condicionais\noidio |>\n  ggplot(aes(time, sev * 100)) +\n  geom_jitter(width = 0.1) +\n  facet_grid(~irrigation_type ~ moisture)\n\n# Filtrar irrigação específicas\noidio2 <- oidio |>\n  filter(irrigation_type %in% c(\"MS\", \"Ms above canopy\", \"Overhead\"))\n\n# Visualizar dados filtrados\noidio2 |>\n  ggplot(aes(time, sev * 100)) +\n  geom_jitter(width = 0.1) +\n  facet_wrap(~moisture ~ irrigation_type)\n\n# Calcular AUDPC agrupado\noidio3 <- oidio2 |>\n  group_by(irrigation_type, moisture, block) |>\n  summarize(AUDPC = AUDPC(time, sev))\n\n# Visualizar AUDPC\noidio3 |>\n  ggplot(aes(x = irrigation_type, y = AUDPC, color = moisture)) + \n  geom_point(size = 2) + \n  facet_wrap(~moisture) +\n  scale_y_continuous(limits = c(0, 20))\n\n# Modelo linear para AUDPC com interação\nmodel_oidio <- lm(AUDPC ~ irrigation_type * moisture, data = oidio3)\n# Verifique o objeto\nglimpse(oidio3)\n\n# Se as colunas não estiverem corretas, crie novamente:\noidio3 <- oidio2 %>%\n  group_by(irrigation_type, moisture, block) %>%\n  summarize(AUDPC = AUDPC(time, sev), .groups = \"drop\")\n\n# Agora rode o teste ANOVA\nanova_test(oidio3, AUDPC ~ irrigation_type * moisture)\n\n\n# Análise de variância\nanova(model_oidio)\n\n# Simulação dos resíduos\nplot(simulateResiduals(model_oidio))\n\n# Estimativas marginais condicionais\nmedias_oidio <- emmeans(model_oidio, ~ moisture | irrigation_type)\ncld(medias_oidio)\n\n# Coeficiente de variação\ncv.model(model_oidio)\n\n# Teste de ANOVA com rstatix (opcional)\nanova_test(oidio3, AUDPC ~ irrigation_type * moisture)\n\n\n\n```\n\n\n\n\n\n\n\n\n## Aula 5 – Modelos lineares e comparação de médias {#aula-5}\n\nEste script realiza uma análise estatística completa de experimentos agronômicos envolvendo diferentes tratamentos e variáveis de interesse:\n\n-   Importação e visualização de dados\n-   Análises estatísticas\n-   Diagnóstico de modelos\n-   Comparação de médias\n\n\n\n\n\n\n\n\n```{r}\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\n\n# Carregamento de pacotes necessários\nlibrary(readxl)       # Leitura de arquivos Excel\nlibrary(ggplot2)      # Visualização de dados\nlibrary(DHARMa)       # Simulação e diagnóstico de resíduos\nlibrary(emmeans)      # Estimativa de médias marginais\nlibrary(multcomp)     # Comparações múltiplas (cld, pwpm)\nlibrary(agricolae)    # Cálculo do coeficiente de variação\nlibrary(lme4)         # Modelos lineares mistos\nlibrary(dplyr)        # Manipulação de dados\n\n# Leitura dos dados\ncampo <- read_xlsx(\"dados-diversos.xlsx\", sheet = \"fungicida_campo\")\nmilho <- read_xlsx(\"dados-diversos.xlsx\", sheet = \"milho\")\n\n# Correlação entre variáveis\ncor(campo$FER, campo$PROD)\ncor.test(campo$FER, campo$DFC)\n\n# Gráfico de dispersão por tratamento com erro padrão\ncampo |> \n  ggplot(aes(x = TRAT, y = PROD)) +\n  geom_jitter(width = 0.1) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", colour = \"red\", width = 0.3) +\n  stat_summary(fun = mean, geom = \"point\", colour = \"red\", size = 2)\n\n# Ajuste de fatores\ncampo$TRAT <- factor(campo$TRAT)\ncampo$BLOCO <- factor(campo$BLOCO)\n\n# Modelo linear com log da FER ~ BLOCO + TRAT\nm_campo <- lm(log(FER) ~ BLOCO + TRAT, data = campo)\nanova(m_campo)\n\n# Diagnóstico dos resíduos\nplot(simulateResiduals(m_campo))\n\n# Médias ajustadas por tratamento\nmeans_campo <- emmeans(m_campo, ~TRAT)\nplot(means_campo)\ncld(means_campo)        # Letras de comparação\npwpm(means_campo)       # Comparação em forma de matriz\ncv.model(m_campo)       # Coeficiente de variação\n\n# Diagnóstico gráfico do modelo\nplot(m_campo)\n\n# Análise de correlação no conjunto milho\nmilho |> \n  ggplot(aes(index, yield)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n\ncor.test(milho$index, milho$yield)\ncor1 <- cor(milho$index, milho$yield)\ncor1^2 * 100  # Coeficiente de determinação (%)\n\n# Gráfico comparativo entre híbridos por método\nmilho |>\n  ggplot(aes(hybrid, index, color = method)) +\n  geom_jitter(width = 0.1) +\n  coord_flip()\n\n# Modelo misto: yeld ~ híbrido * método + bloco aninhado\nmilho$hybrid_block <- interaction(milho$hybrid, milho$block)\nm_milho <- lmer(yield ~ hybrid * method + (1 | block:hybrid_block), data = milho)\n\n# ANOVA do modelo misto\ncar::Anova(m_milho)\n\n# Diagnóstico de resíduos do modelo misto\nplot(simulateResiduals(m_milho))\n\n# Estimativa de médias por híbrido e método\nmedia_milho <- emmeans(m_milho, ~ hybrid | method)\ncld(media_milho, Letters = letters)\n\nmedia_milho <- emmeans(m_milho, ~ method | hybrid)\ncld(media_milho, Letters = letters)\n```\n\n\n\n\n\n\n\n\n## Aula 6 – Regressões e Estimativas de Dose-Resposta {#aula-6}\n\nNesta aula, serão abordadas técnicas estatísticas aplicadas a dados biológicos e experimentais, com foco na análise de contagem, regressão linear e não linear. Os principais tópicos incluem:\n\n-   Transformações para Normalidade e Homogeneidade\\*\\*\n-   Regressão Linear Simples e Modelos Mistos\\*\\*\n-   Análise de Regressão Não Linear\\*\\*\n-   Comparações de Médias e Interpretação Biológica\\*\\*\n\n\n\n\n\n\n\n\n```{r}\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\n\n# Carregando pacotes necessários\nlibrary(MASS)\nlibrary(DHARMa)\nlibrary(tidyverse)\n\n# Dataset: InsectSprays\ndata(\"InsectSprays\")\ninsetos <- InsectSprays\n\n# Modelo linear com transformação sqrt\nm1 <- lm(sqrt(count) ~ spray, data = insetos)\nplot(simulateResiduals(m1))  # Avaliação de resíduos com DHARMa\n\n# Box-Cox para encontrar melhor lambda de transformação\n# Garante que count é numérica\ninsetos$count <- as.numeric(as.character(insetos$count))\n\n# Aplica Box-Cox\nb <- boxcox(lm(count + 0.1 ~ 1, data = insetos))\nlambda <- b$x[which.max(b$y)]\nlambda\n\n# Aplicando transformação Box-Cox\ninsetos <- insetos |>\n  mutate(count2 = ((count^lambda - 1) / lambda))\n\n# Análise de regressão linear (dados experimentais)\nlibrary(gsheet)\nlibrary(ggplot2)\n\n# Importando dados do Google Sheets\nstand <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=401662555#gid=401662555\")\n\n# Visualizando relação entre tratamento e número de plantas por experimento\nstand |>\n  ggplot(aes(trat, nplants)) +\n  geom_point(color = \"gray\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"black\") +\n  facet_wrap(~exp) +\n  theme_minimal() +\n  labs(x = \"% de inóculo de sementes\", y = \"Número de plantas\")\n\n# Modelos lineares por experimento\nexp1 <- filter(stand, exp == 1)\nm_exp1 <- lm(nplants ~ trat + bloco, data = exp1)\n\nexp2 <- filter(stand, exp == 2)\nm_exp2 <- lm(nplants ~ trat, data = exp2)\n\nexp3 <- filter(stand, exp == 3)\nm_exp3 <- lm(nplants ~ trat, data = exp3)\n\n# Modelo misto considerando efeitos aleatórios (experimento e bloco)\nlibrary(lme4)\nm_misto <- lmer(nplants ~ trat + (1 | exp/bloco), data = stand)\ncar::Anova(m_misto)  # ANOVA com efeito misto\n\n# Visualização geral da regressão ajustada\nstand |>\n  ggplot(aes(trat, nplants, color = factor(exp))) +\n  geom_point() +\n  geom_abline(intercept = 69.74, slope = -0.568, linewidth = 2) +\n  geom_abline(intercept = 43, slope = -0.73, linetype = \"dashed\") +\n  geom_abline(intercept = 96, slope = -0.40, linetype = \"dashed\")\n\n# Regressão não linear\nlibrary(drc)\nfungi <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=465348652#gid=465348652\")\n\n# Resumo e visualização das médias\nfungi |> \n  group_by(code, dose) |> \n  summarise(germination = mean(germination), .groups = \"drop\") |> \n  ggplot(aes(dose, germination)) +\n  geom_point() +\n  geom_line() +\n  facet_wrap(~code)\n\n# Regressão dose-resposta para um isolado específico\nFGT43 <- filter(fungi, code == \"FGT43\")\nm43 <- drm(germination ~ dose, data = FGT43, fct = W2.3())\nAIC(m43)\nplot(m43)\nED(m43, 50)  # Dose efetiva 50%\n\n# Estimando EC50 para todos os isolados\nlibrary(ec50estimator)\ndf_ec50 <- estimate_EC50(\n  germination ~ dose,\n  data = fungi,\n  isolate_col = \"code\",\n  strata_col = \"state\",\n  interval = \"delta\",\n  fct = drc::LL.3()\n)\n\n# Visualizando estimativas de EC50\ndf_ec50 |>\n  ggplot(aes(reorder(ID, Estimate), Estimate)) +\n  geom_point() +\n  coord_flip()\n\n# Histograma das estimativas\ndf_ec50 |>\n  ggplot(aes(x = Estimate)) +\n  geom_histogram(bins = 5, color = \"white\")\n\n```\n\n","srcMarkdownNoYaml":"\n\n\n\n\n\n\n\n\n## Aula 1 – Apresentação e comandos R {#aula-1}\n\nOs tópicos abordados nessa aula foram:\n\n-   Operações básicas no R;\n-   Trabalhando com datasets;\n-   Transformações matemáticas;\n-   Uso de pacotes R.\n\n\n\n\n\n\n\n\n```{r}\n#carregando conjunto de dados interno do programa R.\ndados <- Orange\ndados = Orange\n\n#visualizando o conjunto de dados\nOrange\n\n### Transformações Matemáticas\n# Criar vetor com valores de circunferência\ncirc <- dados$circumference  # Extrai coluna como vetor\n\n# Aplicar exponencial e logaritmo\ncirc2 <- exp(circ)           # Exponencial\ncirc3 <- log(circ2)          # Log do resultado anterior (volta ao original)\n\n# Adicionar nova coluna ao dataframe\ndados$logcirc <- log(dados$circumference)\n\n# Visualizar dataframe modificado\nhead(dados)\n\n### Instalando pacotes no R. \n\n\n# Instalar pacotes (executar apenas uma vez)\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\n\ninstall.packages(\"tidyverse\")\ninstall.packages(\"agricolae\")\n\n# Carregar pacotes\n\nlibrary(tidyverse)\nlibrary(agricolae)\n\n### Exemplo com Gráfico Básico\n\n# Criar dados de exemplo\ndates <- c(7,14,21,28,35,42)\nseverity <- c(0.1,5,10,35,50,60)\ndata_curva <- data.frame(dates, severity)\n\n# Gráfico de colunas e linha\ndata_curva |>\n  mutate(severity2 = c(1,10,35,58,70,82)) |> \n  ggplot(aes(dates, severity2)) +\n  geom_col(fill = \"black\") +\n  geom_line(linewidth = 2, color = \"purple\") +\n  geom_point(size = 5, color = \"black\") +\n  labs(\n    title = \"Progresso da doença ao longo dos dias\",\n    x = \"Dias após plantio\",\n    y = \"Severidade (%)\"\n  ) +\n  theme_classic()\n\n## Dicas Rápidas\n\n#1. **Atalhos úteis**:\n  # - `Ctrl + Enter`: Executa linha selecionada\n  # - `Alt + -`: Insere `<-` automaticamente\n\n#2. **Boas práticas**:\n  # - Use nomes descritivos para objetos (`dados_plantas` em vez de `df1`)\n  # - Comente seu código com `#` para explicar etapas importantes\n\n#3. **Para saber mais**:\n  # - [Documentação do R](https://www.r-project.org/)\n  # - [Cheatsheet do tidyverse](https://www.tidyverse.org/learn/)\n```\n\n\n\n\n\n\n\n\n## Aula 2 – Importando dados externos {#aula-2}\n\nOs tópicos desta aula foram:\n\n-   Importação de dados de Excel e Google Sheets;\n-   Manipulação com `dplyr` (filtros, contagens, seleção);\n-   Visualização com `ggplot2` (gráficos customizados);\n-   Combinação de gráficos com `patchwork` ;\n\n\n\n\n\n\n\n\n```{r}\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\n\n# Carregando os pacotes necessários para essa aula\nlibrary(tidyverse)    # Carrega o conjunto de pacotes do tidyverse\nlibrary(readxl)       # Para leitura de arquivos Excel (.xls/.xlsx)\nlibrary(writexl)      # Para exportar dados em formato .xlsx\nlibrary(gsheet)       # Para importar planilhas do Google Sheets\nlibrary(janitor)      # Para tabelas limpas e funções como 'tabyl'\nlibrary(ggthemes)     # Temas visuais para gráficos com ggplot2\nlibrary(patchwork)    # Para combinar múltiplos gráficos ggplot\n\n#---------------------------------------\n# 1. Importação de dados locais\n#---------------------------------------\n\n# Lê a 2ª planilha do arquivo Excel (essa contém 'dose')\ndados2 <- read_excel(\"dados-diversos.xlsx\", sheet = 2)\nprint(colnames(dados2))   # Verificar colunas da planilha 2, confirmar que 'dose' existe\nglimpse(dados2)\n\n#---------------------------------------\n# 2. Importação de dados adicionais\n#---------------------------------------\n\n# Lê um arquivo .csv\ncurve <- read.csv(\"curva.csv\")\n\n# Exporta os dados em dois formatos\nwrite_xlsx(curve, \"curva2.xlsx\")\nwrite.csv(curve, \"curve2.csv\", row.names = FALSE)\n\n#---------------------------------------\n# 3. Importação de dados da nuvem (Google Sheets)\n#---------------------------------------\n\n# Importa planilhas públicas do Google Sheets\ndados_nuvem <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=373270992\")\ndados_mg     <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=983033137\")\nsurvey       <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1118819738\")\n\n#---------------------------------------\n# 4. Exploração inicial dos dados 'survey'\n#---------------------------------------\n\n# Contagem por grupos\nsurvey |> group_by(state)   |> count()\nsurvey |> group_by(species) |> count()\nsurvey |> group_by(residue) |> count()\nsurvey |> group_by(state, residue) |> count()\n\n# Filtro por estados específicos\nRS <- survey |> filter(state == \"RS\")\nPR <- survey |> filter(state == \"PR\")\n\n# Combina os dados dos dois estados\ncombinado <- rbind(RS, PR)\n\n#---------------------------------------\n# 5. Seleção e filtragem de colunas\n#---------------------------------------\n\n# Seleciona apenas algumas colunas\nsurvey_b <- survey |> select(year, state, species)\n\n# Alternativa explícita com dplyr:: (equivalente)\nsurvey_b <- survey |> dplyr::select(year, state, species)\n\n# Filtra dados apenas do ano de 2009\nsurvey_2009 <- survey |>\n  select(year, state, species) |>\n  filter(year == 2009)\n\n#---------------------------------------\n# 6. Tabelas de contingência\n#---------------------------------------\n\n# Frequência cruzada entre ano e espécie\nsurvey_b |> tabyl(year, species)\n\n#---------------------------------------\n# 7. Visualizações com ggplot2\n#---------------------------------------\n\n# Gráfico de colunas por espécie e ano\nsurvey_b |>\n  group_by(year, species) |> count() |>\n  ggplot(aes(year, n)) +\n  geom_col() +\n  facet_wrap(~species)\n\n# Gráfico colorido manualmente\nsurvey_b |>\n  group_by(year, species) |> count() |>\n  ggplot(aes(year, n, fill = species)) +\n  geom_col() +\n  scale_fill_manual(values = c(\"red\", \"blue\"))\n\n# Gráfico em escala de cinza\nsurvey_b |>\n  group_by(year, species) |> count() |>\n  ggplot(aes(year, n, fill = species)) +\n  geom_col() +\n  scale_fill_grey()\n\n# Gráfico com paleta viridis (mais acessível)\nsurvey_b |>\n  group_by(year, species) |> count() |>\n  ggplot(aes(year, n, fill = species, color = species)) +\n  geom_col() +\n  scale_fill_viridis_d()\n\n#---------------------------------------\n# 8. Visualizações do conjunto 'mg'\n#---------------------------------------\n\n# Importa os dados novamente (já feito antes, poderia ser omitido)\nmg <- dados_mg\n\n# Gráfico de dispersão simples\nmg |>\n  ggplot(aes(trat, comp)) +\n  geom_point()\n\n# Gráfico com jitter para melhor visualização\nmg |>\n  ggplot(aes(trat, comp)) +\n  geom_jitter(width = 0.1) +\n  scale_y_continuous(limits = c(0, 20))\n\n# Boxplot com jitter sobreposto\nmg |>\n  ggplot(aes(trat, comp)) +\n  geom_boxplot() +\n  geom_jitter(width = 0.1, color = \"gray50\") +\n  scale_y_continuous(limits = c(0, 20)) +\n  labs(x = \"Tratamento\", y = \"Comprimento (mm)\") +\n  theme_classic()\n\n# Gráfico final formatado\nplot_mg <- mg |>\n  ggplot(aes(trat, comp)) +\n  geom_boxplot(fill = \"#056646\", outlier.colour = NA) +\n  geom_jitter(width = 0.1, color = \"gray50\") +\n  scale_y_continuous(limits = c(0, 20)) +\n  labs(\n    x = \"Tratamento\", y = \"Comprimento (mm)\",\n    title = \"Efeito do magnésio\",\n    subtitle = \"Tamanho da lesão da mancha\",\n    caption = \"Betim, V. R. P. B\"\n  ) +\n  theme_classic(base_size = 14)\n\n# Salva o gráfico em PNG\nggsave(\"box.png\", plot = plot_mg, bg = \"white\", width = 5, height = 4)\n\n#---------------------------------------\n# 9. Gráfico micelial\n#---------------------------------------\n\nmicelial <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=959387827\")\n\nplot_micelial <- micelial |> \n  ggplot(aes(x = reorder(especie, tcm), y = tcm)) +\n  geom_boxplot(fill = \"white\", outlier.colour = NA) +\n  geom_jitter(width = 0.1) +\n  coord_flip() +\n  labs(\n    x = \"Espécie\", y = \"TCM (mm)\",\n    title = \"Taxa de crescimento micelial\",\n    caption = \"Fonte: V. Betim (2021)\"\n  ) +\n  theme_clean()\n\n#---------------------------------------\n# 10. Combinação de gráficos com patchwork\n#---------------------------------------\n\n# Combina os dois gráficos lado a lado\ncombo_plot <- (plot_mg + plot_micelial) + \n  plot_annotation(tag_levels = \"A\")\n\n# Salva o gráfico combinado\nggsave(\"combo1.png\", combo_plot, bg = \"white\", width = 8, height = 4)\n\n```\n\n\n\n\n\n\n\n\n## Aula 3 – Estatística {#aula-3}\n\nEste script R apresenta uma análise estatística completa, organizada em quatro tópicos principais:\n\n-   Importação e Visualização de Dados;\n\n-   Testes Estatísticos para Comparação de Grupos;\n\n-   Análise de Variância (ANOVA) e Comparações Múltiplas;\n\n-   Modelagem Estatística Avançada e Diagnóstico;\n\n\n\n\n\n\n\n\n```{r}\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\n\n# ---------- Pacotes essenciais ----------\nlibrary(gsheet)     # Importar dados direto do Google Sheets\nlibrary(ggplot2)    # Gráficos\nlibrary(dplyr)      # Manipulação de dados\nlibrary(tidyr)      # Manipulação de dados (pivot_wider etc)\nlibrary(rstatix)    # Testes estatísticos fáceis\nlibrary(ggpubr)     # Gráficos com testes estatísticos\nlibrary(report)     # Reporte automático dos testes\nlibrary(car)        # Testes para ANOVA e homogeneidade\nlibrary(emmeans)    # Médias ajustadas e comparações múltiplas\nlibrary(multcomp)   # Comparações múltiplas\nlibrary(multcompView) # Letras agrupadoras (post-hoc)\nlibrary(agricolae)  # Teste de Kruskal-Wallis com agrupamento\nlibrary(DHARMa)     # Diagnóstico de modelos GLM\nlibrary(performance) # Avaliação de modelos\n\n# Instale os pacotes que não tiver ainda:\n# install.packages(c(\"gsheet\",\"ggplot2\",\"dplyr\",\"tidyr\",\"rstatix\",\"ggpubr\",\"report\",\"car\",\"emmeans\",\"multcomp\",\"multcompView\",\"agricolae\",\"DHARMa\",\"performance\"))\n\n\n# ---------- Importar dados e visualização inicial ----------\n\n# Dados magnésio - teste t e gráfico\ndat_mg <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=983033137#gid=983033137\")\n\n# Visualizar dados com jitter plot para ver distribuição por tratamento\nggplot(dat_mg, aes(x = trat, y = comp)) +\n  geom_jitter(width = 0.1) +\n  labs(title = \"Distribuição da variável comp por tratamento\",\n       x = \"Tratamento\",\n       y = \"Comprimento\")\n\n# Visualizar estrutura e nomes (se precisar)\nglimpse(dat_mg)\nnames(dat_mg)\n\n\n# ---------- Teste t para dados independentes ----------\n\n# Teste t clássico para comparação entre control e Mg2\n# Primeiro, precisamos dos dados no formato wide (pivot_wider)\ndat_mg_wide <- dat_mg %>%\n  tidyr::pivot_wider(names_from = trat, values_from = comp) %>%\n  dplyr::select(-dplyr::any_of(\"rep\")) # Remove coluna de repetição se existir\n\n# Teste t (independente, variâncias não assumidas iguais)\nt_result <- t.test(dat_mg_wide$control, dat_mg_wide$Mg2, var.equal = FALSE)\nprint(t_result)\nreport(t_result)  # Relatório bonito do teste\n\n# Alternativa para teste t usando fórmula (do pacote rstatix)\nt_test_formula <- t.test(comp ~ trat, data = dat_mg, var.equal = FALSE)\nprint(t_test_formula)\n\n\n# ---------- Boxplot com valor p no gráfico ----------\n\n# Criar data frame para colocar p-valor no gráfico\np_values <- data.frame(\n  group1 = \"control\",\n  group2 = \"Mg2\",\n  p.value = t_result$p.value,\n  y.position = max(dat_mg$comp) * 0.9\n)\n\n# Boxplot com p-valor anotado\np <- ggboxplot(dat_mg,\n               x = \"trat\",\n               y = \"comp\",\n               color = \"trat\",\n               palette = \"jco\") +\n  stat_pvalue_manual(p_values, label = \"p.value\") +\n  ylim(0, max(dat_mg$comp) * 1.1) +\n  labs(title = \"Boxplot de comprimento por tratamento com p-valor\",\n       x = \"Tratamento\",\n       y = \"Comprimento\")\nprint(p)\n\n\n# ---------- Testes de normalidade e variância ----------\n\n# Teste Shapiro-Wilk para normalidade por grupo\nshapiro_control <- shapiro.test(dat_mg_wide$control)\nshapiro_Mg2 <- shapiro.test(dat_mg_wide$Mg2)\nprint(shapiro_control)\nprint(shapiro_Mg2)\n\n# Histogramas para visualizar a distribuição\nhist(dat_mg_wide$control, main = \"Histograma Controle\", xlab = \"Comprimento\")\nhist(dat_mg_wide$Mg2, main = \"Histograma Mg2\", xlab = \"Comprimento\")\n\n# Teste F para homogeneidade de variâncias\nvar_homogeneity <- var.test(dat_mg_wide$control, dat_mg_wide$Mg2)\nprint(var_homogeneity)\n\n\n# ---------- Teste t pareado para dados dependentes ----------\n\n# Importa outro conjunto para exemplo t pareado\nescala <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1729131173#gid=1729131173\")\n\n# Transformar em formato wide para t test pareado\nescala_wide <- escala %>%\n  pivot_wider(id_cols = rater, names_from = assessment, values_from = acuracia)\n\n# Teste t pareado\nt_pareado <- t.test(escala_wide$Unaided, escala_wide$Aided1, paired = TRUE)\nprint(t_pareado)\n\n# Boxplot para visualização\nggplot(escala, aes(x = assessment, y = acuracia)) +\n  geom_boxplot() +\n  labs(title = \"Comparação da Acurácia por Assessment\",\n       x = \"Assessment\",\n       y = \"Acurácia\")\n\n\n# ---------- Testes de variância, normalidade e não-paramétricos para grupos ----------\n\n# Filtrar para grupos (separar vetor)\nunaided <- escala %>% filter(assessment == \"Unaided\") %>% pull(acuracia)\naided <- escala %>% filter(assessment == \"Aided1\") %>% pull(acuracia)\n\n# Teste de variância\nprint(var.test(unaided, aided))\n\n# Histogramas\nhist(unaided, main = \"Histograma Unaided\", xlab = \"Acurácia\")\nhist(aided, main = \"Histograma Aided1\", xlab = \"Acurácia\")\n\n# Shapiro para normalidade\nprint(shapiro.test(unaided))\nprint(shapiro.test(aided))\n\n# Teste t não pareado (Welch)\nprint(t.test(unaided, aided, paired = FALSE, var.equal = FALSE))\n\n# Teste de Wilcoxon não pareado (não paramétrico)\nprint(wilcox.test(unaided, aided, paired = FALSE))\n\n\n# ---------- Análise de Variância (ANOVA) para micélio ----------\n\nmicelial <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=959387827#gid=959387827\")\n\n# Boxplot para micélio\nggplot(micelial, aes(x = especie, y = tcm)) +\n  geom_boxplot(outlier.color = NA) +\n  geom_jitter(width = 0.1) +\n  labs(title = \"Taxa de Crescimento Micelial\", x = \"Espécie\", y = \"TCM (mm)\")\n\n# ANOVA e teste dos resíduos\nanova_model <- aov(tcm ~ especie, data = micelial)\nsummary(anova_model)\n\n# Histogramas dos resíduos e teste Shapiro-Wilk\nhist(residuals(anova_model), main = \"Resíduos ANOVA\")\nprint(shapiro.test(residuals(anova_model)))\n\n# Testes de homogeneidade (Bartlett e Levene)\nprint(bartlett.test(tcm ~ especie, data = micelial))\nprint(leveneTest(tcm ~ especie, data = micelial))\n\n# Comparações múltiplas com emmeans\nemm <- emmeans(anova_model, ~ especie)\nprint(emm)\n\n# Letras agrupadoras\nprint(cld(emm))\n\n# Comparação par a par\nprint(pairs(emm))\n\n\n# ---------- Análise de inseticidas (InsectSprays) ----------\n\ndata(\"InsectSprays\")\n\n# Visualizar dados\nggplot(InsectSprays, aes(x = spray, y = count)) +\n  geom_boxplot(outlier.color = NA) +\n  geom_jitter(width = 0.1) +\n  labs(title = \"Contagem por Tipo de Spray\", x = \"Spray\", y = \"Count\")\n\n# Teste de homogeneidade (Bartlett)\nprint(bartlett.test(count ~ spray, data = InsectSprays))\n\n# Modelo linear\nlm_model <- lm(count ~ spray, data = InsectSprays)\n\n# Verificar resíduos\nhist(residuals(lm_model), main = \"Resíduos do Modelo Linear\")\nprint(shapiro.test(residuals(lm_model)))\nqqnorm(residuals(lm_model))\nqqline(residuals(lm_model))\n\n# Alternativa: transformar variável resposta com rank\n\n# Corrigido: criar nova variável com rank(count + 0.1)\nInsectSprays <- InsectSprays %>%\n  mutate(rank_count = rank(count + 0.1))\n\n# Modelo com variável transformada\nlm_rank <- lm(rank_count ~ spray, data = InsectSprays)\n\nhist(residuals(lm_rank), main = \"Resíduos após transformação\")\nprint(shapiro.test(residuals(lm_rank)))\nqqnorm(residuals(lm_rank))\nqqline(residuals(lm_rank))\n\n# Análise do modelo transformado\nanova(lm_rank)\nreport(lm_rank)\n\n# Médias ajustadas para modelo transformado\nemm_rank <- emmeans(lm_rank, ~ spray, type = \"response\")\nprint(emm_rank)\nprint(cld(emm_rank))\n\n# Plotagem médias ajustadas\nplot(emm_rank)\n\n# Teste não paramétrico Kruskal-Wallis\nprint(kruskal.test(count ~ spray, data = InsectSprays))\n\n# Teste com pacote agricolae para agrupamento\nkruskal_out <- with(InsectSprays, kruskal(count, spray, group = TRUE, console = TRUE))\nprint(kruskal_out)\n\n# Diagnóstico modelo GLM Poisson (alternativa paramétrica)\nglm_poisson <- glm(count ~ spray, data = InsectSprays, family = poisson)\nanova(glm_poisson)\nAnova(glm_poisson)\nplot(simulateResiduals(glm_poisson))\nperformance(glm_poisson)\n\n```\n\n\n\n\n\n\n\n\n## Aula 4 – Análises Estatísticas e Modelos {#aula-4}\n\nEste código aborda análises estatísticas avançadas para dados experimentais, com foco em:\n\n-   Diagnóstico de Modelos Usando o Pacote DHARMa\n-   Modelagem Estatística Paramétrica e Comparação de Médias\n-   Análise Fatorial e Interações\n-   Análise de Dados de Experimentos com Repetições e Agrupamentos\n\n\n\n\n\n\n\n\n```{r}\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\n\n# ----------------------------\n# Pacotes necessários\n# ----------------------------\nlibrary(DHARMa)       # Simulação de resíduos para modelos\nlibrary(multcomp)     # Comparações múltiplas\nlibrary(car)          # Análises ANOVA e diagnóstico\nlibrary(emmeans)      # Estimativa de médias marginais\nlibrary(gsheet)       # Importar planilhas Google Sheets\nlibrary(ggplot2)      # Visualização gráfica\nlibrary(dplyr)        # Manipulação de dados\nlibrary(agricolae)    # Testes não paramétricos e comparações\nlibrary(patchwork)    # Compor múltiplos plots\nlibrary(epifitter)    # Dados e funções epidemiológicas\nlibrary(rstatix)      # Funções de testes estatísticos\n\n# ----------------------------\n# Modelo Linear para Insetos com Transformação\n# ----------------------------\ninsetos <- InsectSprays \n\n# Ajuste do modelo linear com transformação sqrt para normalizar resíduos\nm2 <- lm(sqrt(count) ~ spray, data = insetos)\n\n# Visualização dos resíduos simulados com DHARMa\nplot(simulateResiduals(m2))\n\n# Verificação das premissas do modelo linear\ncheck_model(m2)\n\n# ----------------------------\n# Modelo GLM para Insetos (Poisson)\n# ----------------------------\nm4 <- glm(count ~ spray, data = insetos, family = poisson)\n\n# Análise de variância para o GLM\nanova(m4)\nAnova(m4) # Anova pelo pacote car\n\n# Visualização dos resíduos simulados do GLM\nplot(simulateResiduals(m4))\n\n# Estimativa das médias marginais e comparações múltiplas\nmedias_m4 <- emmeans(m4, ~ spray, type = \"response\")\ncld(medias_m4)\n\n# ----------------------------\n# Análise Fatorial: Fungicida e Dose\n# ----------------------------\nfungicida_vaso <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=2023059672#gid=2023059672\")\n\n# Visualizar severidade por dose e tratamento\nfungicida_vaso |>\n  ggplot(aes(dose, severity * 100)) +\n  geom_jitter(width = 0.1) +\n  facet_wrap(~treat)\n\n# Modelo linear com interação entre tratamento e dose\nm_anti <- lm(severity ~ treat * dose, data = fungicida_vaso)\n\n# Análise de variância do modelo\nanova(m_anti)\n\n# Simulação dos resíduos com DHARMa\nplot(simulateResiduals(m_anti))\n\n# Estimativas marginais condicionais e agrupamento\nmedia_anti_treat <- emmeans(m_anti, ~ treat | dose)\ncld(media_anti_treat)\n\nmedia_anti_dose <- emmeans(m_anti, ~ dose | treat)\ncld(media_anti_dose)\n\n# Coeficiente de variação\ncv.model(m_anti)\n\n# Gráfico de interação dose x tratamento\ninteraction.plot(fungicida_vaso$treat, fungicida_vaso$dose, fungicida_vaso$severity, data = fungicida_vaso)\n\n# Gráficos separados para dose e tratamento\np1 <- fungicida_vaso |>\n  ggplot(aes(dose, severity * 100)) +\n  geom_jitter(width = 0.1)\n\np2 <- fungicida_vaso |>\n  ggplot(aes(treat, severity * 100)) +\n  geom_jitter(width = 0.1)\n\n# Mostrar os dois gráficos lado a lado\np1 + p2\n\n# ----------------------------\n# Análise de Oídio - Severidade e AUDPC\n# ----------------------------\noidio <- PowderyMildew\n\n# Visualizar severidade por tempo e tipo de irrigação\noidio |>\n  ggplot(aes(time, sev * 100)) +\n  geom_jitter(width = 0.1) +\n  facet_wrap(~irrigation_type)\n\n# Visualização por duas variáveis condicionais\noidio |>\n  ggplot(aes(time, sev * 100)) +\n  geom_jitter(width = 0.1) +\n  facet_grid(~irrigation_type ~ moisture)\n\n# Filtrar irrigação específicas\noidio2 <- oidio |>\n  filter(irrigation_type %in% c(\"MS\", \"Ms above canopy\", \"Overhead\"))\n\n# Visualizar dados filtrados\noidio2 |>\n  ggplot(aes(time, sev * 100)) +\n  geom_jitter(width = 0.1) +\n  facet_wrap(~moisture ~ irrigation_type)\n\n# Calcular AUDPC agrupado\noidio3 <- oidio2 |>\n  group_by(irrigation_type, moisture, block) |>\n  summarize(AUDPC = AUDPC(time, sev))\n\n# Visualizar AUDPC\noidio3 |>\n  ggplot(aes(x = irrigation_type, y = AUDPC, color = moisture)) + \n  geom_point(size = 2) + \n  facet_wrap(~moisture) +\n  scale_y_continuous(limits = c(0, 20))\n\n# Modelo linear para AUDPC com interação\nmodel_oidio <- lm(AUDPC ~ irrigation_type * moisture, data = oidio3)\n# Verifique o objeto\nglimpse(oidio3)\n\n# Se as colunas não estiverem corretas, crie novamente:\noidio3 <- oidio2 %>%\n  group_by(irrigation_type, moisture, block) %>%\n  summarize(AUDPC = AUDPC(time, sev), .groups = \"drop\")\n\n# Agora rode o teste ANOVA\nanova_test(oidio3, AUDPC ~ irrigation_type * moisture)\n\n\n# Análise de variância\nanova(model_oidio)\n\n# Simulação dos resíduos\nplot(simulateResiduals(model_oidio))\n\n# Estimativas marginais condicionais\nmedias_oidio <- emmeans(model_oidio, ~ moisture | irrigation_type)\ncld(medias_oidio)\n\n# Coeficiente de variação\ncv.model(model_oidio)\n\n# Teste de ANOVA com rstatix (opcional)\nanova_test(oidio3, AUDPC ~ irrigation_type * moisture)\n\n\n\n```\n\n\n\n\n\n\n\n\n## Aula 5 – Modelos lineares e comparação de médias {#aula-5}\n\nEste script realiza uma análise estatística completa de experimentos agronômicos envolvendo diferentes tratamentos e variáveis de interesse:\n\n-   Importação e visualização de dados\n-   Análises estatísticas\n-   Diagnóstico de modelos\n-   Comparação de médias\n\n\n\n\n\n\n\n\n```{r}\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\n\n# Carregamento de pacotes necessários\nlibrary(readxl)       # Leitura de arquivos Excel\nlibrary(ggplot2)      # Visualização de dados\nlibrary(DHARMa)       # Simulação e diagnóstico de resíduos\nlibrary(emmeans)      # Estimativa de médias marginais\nlibrary(multcomp)     # Comparações múltiplas (cld, pwpm)\nlibrary(agricolae)    # Cálculo do coeficiente de variação\nlibrary(lme4)         # Modelos lineares mistos\nlibrary(dplyr)        # Manipulação de dados\n\n# Leitura dos dados\ncampo <- read_xlsx(\"dados-diversos.xlsx\", sheet = \"fungicida_campo\")\nmilho <- read_xlsx(\"dados-diversos.xlsx\", sheet = \"milho\")\n\n# Correlação entre variáveis\ncor(campo$FER, campo$PROD)\ncor.test(campo$FER, campo$DFC)\n\n# Gráfico de dispersão por tratamento com erro padrão\ncampo |> \n  ggplot(aes(x = TRAT, y = PROD)) +\n  geom_jitter(width = 0.1) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", colour = \"red\", width = 0.3) +\n  stat_summary(fun = mean, geom = \"point\", colour = \"red\", size = 2)\n\n# Ajuste de fatores\ncampo$TRAT <- factor(campo$TRAT)\ncampo$BLOCO <- factor(campo$BLOCO)\n\n# Modelo linear com log da FER ~ BLOCO + TRAT\nm_campo <- lm(log(FER) ~ BLOCO + TRAT, data = campo)\nanova(m_campo)\n\n# Diagnóstico dos resíduos\nplot(simulateResiduals(m_campo))\n\n# Médias ajustadas por tratamento\nmeans_campo <- emmeans(m_campo, ~TRAT)\nplot(means_campo)\ncld(means_campo)        # Letras de comparação\npwpm(means_campo)       # Comparação em forma de matriz\ncv.model(m_campo)       # Coeficiente de variação\n\n# Diagnóstico gráfico do modelo\nplot(m_campo)\n\n# Análise de correlação no conjunto milho\nmilho |> \n  ggplot(aes(index, yield)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n\ncor.test(milho$index, milho$yield)\ncor1 <- cor(milho$index, milho$yield)\ncor1^2 * 100  # Coeficiente de determinação (%)\n\n# Gráfico comparativo entre híbridos por método\nmilho |>\n  ggplot(aes(hybrid, index, color = method)) +\n  geom_jitter(width = 0.1) +\n  coord_flip()\n\n# Modelo misto: yeld ~ híbrido * método + bloco aninhado\nmilho$hybrid_block <- interaction(milho$hybrid, milho$block)\nm_milho <- lmer(yield ~ hybrid * method + (1 | block:hybrid_block), data = milho)\n\n# ANOVA do modelo misto\ncar::Anova(m_milho)\n\n# Diagnóstico de resíduos do modelo misto\nplot(simulateResiduals(m_milho))\n\n# Estimativa de médias por híbrido e método\nmedia_milho <- emmeans(m_milho, ~ hybrid | method)\ncld(media_milho, Letters = letters)\n\nmedia_milho <- emmeans(m_milho, ~ method | hybrid)\ncld(media_milho, Letters = letters)\n```\n\n\n\n\n\n\n\n\n## Aula 6 – Regressões e Estimativas de Dose-Resposta {#aula-6}\n\nNesta aula, serão abordadas técnicas estatísticas aplicadas a dados biológicos e experimentais, com foco na análise de contagem, regressão linear e não linear. Os principais tópicos incluem:\n\n-   Transformações para Normalidade e Homogeneidade\\*\\*\n-   Regressão Linear Simples e Modelos Mistos\\*\\*\n-   Análise de Regressão Não Linear\\*\\*\n-   Comparações de Médias e Interpretação Biológica\\*\\*\n\n\n\n\n\n\n\n\n```{r}\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\n\n# Carregando pacotes necessários\nlibrary(MASS)\nlibrary(DHARMa)\nlibrary(tidyverse)\n\n# Dataset: InsectSprays\ndata(\"InsectSprays\")\ninsetos <- InsectSprays\n\n# Modelo linear com transformação sqrt\nm1 <- lm(sqrt(count) ~ spray, data = insetos)\nplot(simulateResiduals(m1))  # Avaliação de resíduos com DHARMa\n\n# Box-Cox para encontrar melhor lambda de transformação\n# Garante que count é numérica\ninsetos$count <- as.numeric(as.character(insetos$count))\n\n# Aplica Box-Cox\nb <- boxcox(lm(count + 0.1 ~ 1, data = insetos))\nlambda <- b$x[which.max(b$y)]\nlambda\n\n# Aplicando transformação Box-Cox\ninsetos <- insetos |>\n  mutate(count2 = ((count^lambda - 1) / lambda))\n\n# Análise de regressão linear (dados experimentais)\nlibrary(gsheet)\nlibrary(ggplot2)\n\n# Importando dados do Google Sheets\nstand <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=401662555#gid=401662555\")\n\n# Visualizando relação entre tratamento e número de plantas por experimento\nstand |>\n  ggplot(aes(trat, nplants)) +\n  geom_point(color = \"gray\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"black\") +\n  facet_wrap(~exp) +\n  theme_minimal() +\n  labs(x = \"% de inóculo de sementes\", y = \"Número de plantas\")\n\n# Modelos lineares por experimento\nexp1 <- filter(stand, exp == 1)\nm_exp1 <- lm(nplants ~ trat + bloco, data = exp1)\n\nexp2 <- filter(stand, exp == 2)\nm_exp2 <- lm(nplants ~ trat, data = exp2)\n\nexp3 <- filter(stand, exp == 3)\nm_exp3 <- lm(nplants ~ trat, data = exp3)\n\n# Modelo misto considerando efeitos aleatórios (experimento e bloco)\nlibrary(lme4)\nm_misto <- lmer(nplants ~ trat + (1 | exp/bloco), data = stand)\ncar::Anova(m_misto)  # ANOVA com efeito misto\n\n# Visualização geral da regressão ajustada\nstand |>\n  ggplot(aes(trat, nplants, color = factor(exp))) +\n  geom_point() +\n  geom_abline(intercept = 69.74, slope = -0.568, linewidth = 2) +\n  geom_abline(intercept = 43, slope = -0.73, linetype = \"dashed\") +\n  geom_abline(intercept = 96, slope = -0.40, linetype = \"dashed\")\n\n# Regressão não linear\nlibrary(drc)\nfungi <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=465348652#gid=465348652\")\n\n# Resumo e visualização das médias\nfungi |> \n  group_by(code, dose) |> \n  summarise(germination = mean(germination), .groups = \"drop\") |> \n  ggplot(aes(dose, germination)) +\n  geom_point() +\n  geom_line() +\n  facet_wrap(~code)\n\n# Regressão dose-resposta para um isolado específico\nFGT43 <- filter(fungi, code == \"FGT43\")\nm43 <- drm(germination ~ dose, data = FGT43, fct = W2.3())\nAIC(m43)\nplot(m43)\nED(m43, 50)  # Dose efetiva 50%\n\n# Estimando EC50 para todos os isolados\nlibrary(ec50estimator)\ndf_ec50 <- estimate_EC50(\n  germination ~ dose,\n  data = fungi,\n  isolate_col = \"code\",\n  strata_col = \"state\",\n  interval = \"delta\",\n  fct = drc::LL.3()\n)\n\n# Visualizando estimativas de EC50\ndf_ec50 |>\n  ggplot(aes(reorder(ID, Estimate), Estimate)) +\n  geom_point() +\n  coord_flip()\n\n# Histograma das estimativas\ndf_ec50 |>\n  ggplot(aes(x = Estimate)) +\n  geom_histogram(bins = 5, color = \"white\")\n\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":false,"include-after-body":[{"text":"<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css\">\n"}],"include-in-header":[{"text":"<link href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600&family=Playfair+Display:wght@700&display=swap\" rel=\"stylesheet\">\n"}],"output-file":"Aulas.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","theme":{"light":"cosmo","dark":"darkly"},"page-layout":"article","title":"Aulas"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}